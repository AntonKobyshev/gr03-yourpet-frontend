{"version":3,"file":"static/js/739.2870c51e.chunk.js","mappings":"iSACA,EAA8B,mCAA9B,EAAkF,sCAAlF,EAA2K,wC,oBCerKA,EAAgB,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAEpBI,GADWC,EAAAA,EAAAA,MACoBC,SAASC,MAAM,KAAK,GACnDC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IA+CvBC,GAAeC,EAAAA,EAAAA,cACnB,SAACC,GACCA,EAAEC,iBACF,IAAMC,EAAiBb,EAAQc,OAE/B,GAAuB,KAAnBD,EAIJ,IAC8B,QAAxBX,EACFR,GAASqB,EAAAA,EAAAA,GAAkBF,EAAgB,IACV,aAAxBX,EACTR,GAASsB,EAAAA,EAAAA,IAAwBH,EAAgB,IACxCP,GACTZ,GACEuB,EAAAA,EAAAA,IAAuB,CACrBC,aAAcZ,EACda,MAAON,EACPO,KAAM,IAId,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EACd,MAnBEG,EAAAA,EAAAA,IAAU,yBAoBd,GACA,CAAClB,EAAUJ,EAAqBR,EAAUM,IAG5C,OACEyB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC9BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAmBC,UACjCH,EAAAA,EAAAA,KAAA,QAAMI,SAAUpB,EAAamB,UAC3BH,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CACJC,MAAO/B,EACPgC,SA5DkB,SAACrB,GAC3B,IAAMQ,EAAQR,EAAEsB,OAAOF,MAEvB,GADA9B,EAAWkB,GACG,KAAVA,EACF,IAC8B,QAAxBjB,EACFR,GAASqB,EAAAA,EAAAA,GAAkB,CAAEI,MAAO,GAAIC,KAAM,KACb,aAAxBlB,EACTR,GAASsB,EAAAA,EAAAA,IAAwB,CAAEG,MAAO,GAAIC,KAAM,KAC3Cd,GACTZ,GACEuB,EAAAA,EAAAA,IAAuB,CACrBC,aAAcZ,EACda,MAAO,GACPC,KAAM,IAId,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EACd,CAEJ,EAuCUa,YAAY,SACZC,kBAAgB,EAChBC,MAAO,CACLC,aAAc,OACdC,gBAAiB,UACjBC,WAAY,cACZC,OAAQ,oBACRC,QAAS,oBACTC,OAAQ,OACRC,UAAW,0CAEbC,WAAY,CACVlB,UAAWC,GAEbkB,cACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAc,CAACC,SAAS,MAAKpB,SAAA,EAC5BH,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CAACC,KAAK,SAASd,MAAO,CAAEe,MAAO,WAAYvB,UACpDH,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,MAERpD,IACCyB,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CACTI,QAvGE,WAClBpD,EAAW,IACX,IAC8B,QAAxBC,EACFR,GAASqB,EAAAA,EAAAA,GAAkB,CAAEI,MAAO,GAAIC,KAAM,KACb,aAAxBlB,EACTR,GAASsB,EAAAA,EAAAA,IAAwB,CAAEG,MAAO,GAAIC,KAAM,KAC3Cd,GACTZ,GACEuB,EAAAA,EAAAA,IAAuB,CACrBC,aAAcZ,EACda,MAAO,GACPC,KAAM,IAId,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EACd,CACF,EAqFkBe,MAAO,CAAEe,MAAO,WAAYvB,UAE5BH,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,SAKdC,WAAS,SAMrB,EAEA,EAAeC,EAAAA,KAAW/D,G,8BC1H1B,MAlBA,SAAkBgE,GAChB,OACEhC,EAAAA,EAAAA,KAAA,OAAAiC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEC,MAAO,GACPjB,OAAQ,GACRkB,KAAK,OACLC,MAAM,8BACFJ,GAAK,IAAA7B,UAETH,EAAAA,EAAAA,KAAA,QACEqC,EAAE,+BACFC,OAAQN,EAAMN,MACda,YAAa,QAIrB,ECjBA,EAA0B,sCAA1B,EAA0E,sCAA1E,EAAyH,qCAAzH,EAAwK,sCAAxK,EAA6N,2CAA7N,EAA8Q,kCAA9Q,EAA0X,sCAA1X,EAA8a,+CCSxaC,EAAO,CACX,CAAEC,GAAI,OAAQC,KAAM,QACpB,CAAED,GAAI,aAAcC,KAAM,cAC1B,CAAED,GAAI,WAAYC,KAAM,kBAGpBC,EAAmB,SAAHC,GAEpB,OAFkCA,EAARC,SACA,GAAAC,OAAM5C,EAAW,KAAA4C,OAAI5C,GAAeA,CAEhE,EAgEA,EA9D6B,SAAH6C,GAAyC,IAAnCC,EAAUD,EAAVC,WAAYC,EAAeF,EAAfE,gBACpCC,GAAWC,EAAAA,EAAAA,MACXC,GAAatE,EAAAA,EAAAA,IAAYuE,EAAAA,IAW/B,OACErD,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC9BkB,EAAAA,EAAAA,MAAA,OAAKpB,UAAWC,EAAYC,SAAA,EAC1BkB,EAAAA,EAAAA,MAAA,MAAIpB,UAAWC,EAAYC,SAAA,CACxBqC,EAAKc,KAAI,SAACC,GAAO,OAChBvD,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAACwD,EAAAA,GAAO,CAACf,GAAIc,EAAQd,GAAIxC,UAAW0C,EAAiBxC,SAClDoD,EAAQb,QAFJa,EAAQd,GAIZ,IAENW,IACC/B,EAAAA,EAAAA,MAAAoC,EAAAA,SAAA,CAAAtD,SAAA,EACEH,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAACwD,EAAAA,GAAO,CACNf,GAAG,MACHxC,UAAW0C,EACXf,QAAS,WACPoB,GACF,EAAE7C,SACH,YAPK,QAWRH,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAACwD,EAAAA,GAAO,CACNf,GAAG,WACHxC,UAAW0C,EACXf,QAAS,WACPqB,GACF,EAAE9C,SACH,kBAPK,mBAcdH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBC,UAE/BkB,EAAAA,EAAAA,MAAA,UAAQpB,UAAWC,EAAS0B,QAjDhB,WACbwB,EAIHF,EAAS,YAHTQ,EAAAA,GAAiB,wBAKrB,EA0CyDvD,SAAA,CAAC,YACxCH,EAAAA,EAAAA,KAAC2D,EAAQ,CAACjC,MAAM,UAAUzB,UAAWC,aAMzD,E,kDCPA,EApE0B,SAAH0C,GAOhB,IANLgB,EAAUhB,EAAVgB,WACAC,EAAejB,EAAfiB,gBACAC,EAAclB,EAAdkB,eACAC,EAAmBnB,EAAnBmB,oBACAC,EAAYpB,EAAZoB,aACAC,EAAWrB,EAAXqB,YAEMC,EACgB,QAApBL,EACIC,EACoB,aAApBD,EACAE,EACAE,EAEAE,EAAmB,SAACC,EAAOzE,GAC/B0E,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,WACpCR,EAAarE,EACf,EAEA,OACEK,EAAAA,EAAAA,KAACyE,EAAAA,EAAK,CAACC,QAAS,EAAEvE,SACfyD,EAAa,IACZ5D,EAAAA,EAAAA,KAAC2E,EAAAA,EAAU,CACTC,MAAOhB,EACPjE,KAAMuE,EACNxC,MAAM,UACNmD,QAAQ,WACRtE,SAAU4D,EACVW,GAAI,CACFC,QAAS,OACTC,aAAc,OACd9D,UAAW,yCACXN,aAAc,OACdI,QAAS,WACTF,WAAY,WAEdmE,WAAY,SAACC,GAAI,OACflF,EAAAA,EAAAA,KAACmF,EAAAA,GAAclD,EAAAA,EAAAA,GAAA,CACb6C,GAAI,CACF,iBAAkB,CAChBhE,WAAY,UACZY,MAAO,UACPX,OAAQ,QAEVD,WAAY,UACZY,MAAO,UACP0D,YAAa,WAEfC,KACgB,aAAdH,EAAKzD,MACHzB,EAAAA,EAAAA,KAACsF,EAAAA,EAAa,KAEdtF,EAAAA,EAAAA,KAACuF,EAAAA,EAAgB,IAGrBC,UAAU,SACV5D,QAAS,SAAC1C,GAAC,OAAKiF,EAAiBjF,EAAGgG,EAAKvF,KAAK,EAC9C8F,SAAUP,EAAKvF,OAASsE,GACpBiB,GACJ,KAMd,ECvEA,EAAwB,2B,UCAxB,EAA+B,mCC0C/B,EAtCqB,WACnB,IAAA/G,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CuH,EAASrH,EAAA,GAAEsH,EAAYtH,EAAA,IAE9BuH,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,WACnB,IAAMC,EAAWzB,OAAO0B,YAEtBJ,EADEG,EAAW,IAKjB,EAIA,OAFAzB,OAAO2B,iBAAiB,SAAUH,GAE3B,WACLxB,OAAO4B,oBAAoB,SAAUJ,EACvC,CACF,GAAG,IASH,OACE7F,EAAAA,EAAAA,KAAAyD,EAAAA,SAAA,CAAAtD,SACGuF,IACC1F,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAkB0B,QAVpB,WAClByC,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,UAEd,EAK6DrE,UACrDH,EAAAA,EAAAA,KAACkG,EAAAA,EAAmB,CAACC,SAAS,aAKxC,ECqGA,EAxHoB,WAClB,IAAMlI,GAAWC,EAAAA,EAAAA,MACXkI,GAAUtH,EAAAA,EAAAA,IAAYuH,EAAAA,IAE5BlI,GAA4CC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhD2F,EAAczF,EAAA,GAAEiI,EAAiBjI,EAAA,GACxCkI,GAAsDnI,EAAAA,EAAAA,UAAS,GAAEoI,GAAAlI,EAAAA,EAAAA,GAAAiI,EAAA,GAA1DxC,EAAmByC,EAAA,GAAEC,EAAsBD,EAAA,GAC5C5C,GAAa9E,EAAAA,EAAAA,IAAY4H,EAAAA,IACzBzC,GAAcnF,EAAAA,EAAAA,IAAY6H,EAAAA,IAE1B9C,GADWnF,EAAAA,EAAAA,MACgBC,SAASC,MAAM,KAAK,IAErDgH,EAAAA,EAAAA,YAAU,WACgB,SAApB/B,EAUoB,aAApBA,EAUoB,eAApBA,EAUoB,QAApBA,EAIoB,aAApBA,GACF5F,GACEsB,EAAAA,EAAAA,IAAwB,CAAEG,MAAO,GAAIC,KAAMoE,KAL7C9F,GAASqB,EAAAA,EAAAA,GAAkB,CAAEI,MAAO,GAAIC,KAAMmE,KAV9C7F,GACEuB,EAAAA,EAAAA,IAAuB,CACrBC,aAAc,aACdC,MAAO,GACPC,KAAM,KAdV1B,GACEuB,EAAAA,EAAAA,IAAuB,CACrBC,aAAc,WACdC,MAAO,GACPC,KAAM,KAdV1B,GACEuB,EAAAA,EAAAA,IAAuB,CACrBC,aAAc,OACdC,MAAO,GACPC,KAAM,IAmCd,GAAG,CAACkE,EAAiB5F,EAAU6F,EAAgBC,IAqC/C,OACE1C,EAAAA,EAAAA,MAAA,OAAKpB,UAAU,YAAWE,SAAA,EACxBH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAUC,SAAC,4BAC1BH,EAAAA,EAAAA,KAAChC,EAAa,KACdgC,EAAAA,EAAAA,KAAC4G,EAAoB,CACnB5D,WAxCiB,WACrB/E,GAASqB,EAAAA,EAAAA,GAAkB,CAAEI,MAAO,GAAIC,KAAMmE,IAChD,EAuCMb,gBArCsB,WAC1BhF,GAASsB,EAAAA,EAAAA,IAAwB,CAAEG,MAAO,GAAIC,KAAMoE,IACtD,IAsCKqC,IAAWpG,EAAAA,EAAAA,KAAC6G,EAAAA,GAAM,KACnB7G,EAAAA,EAAAA,KAAC8G,EAAiB,CAChB7C,YAAaA,EACbL,WAAYA,EACZC,gBAAiBA,EACjBC,eAAgBA,EAChBC,oBAAqBA,EACrBC,aAAc,SAACrE,GACW,QAApBkE,EA1BgB,SAAClE,GAC3B2G,EAAkB3G,GAClB1B,GAASqB,EAAAA,EAAAA,GAAkB,CAAEI,MAAO,GAAIC,KAAAA,IAC1C,CAwBUoH,CAAoBpH,GACS,aAApBkE,EAvBc,SAAClE,GAChC8G,EAAuB9G,GACvB1B,GAASsB,EAAAA,EAAAA,IAAwB,CAAEG,MAAO,GAAIC,KAAAA,IAChD,CAqBUqH,CAAyBrH,GA/Cd,SAACA,GAQlB1B,EAPsB,QAApB4F,EAG2B,aAApBA,GAKPrE,EAAAA,EAAAA,IAAuB,CACrBC,aAAcoE,EACdnE,MAAO,GACPC,KAAAA,KAPKJ,EAAAA,EAAAA,IAAwB,CAAEG,MAAO,GAAIC,KAAAA,KAHrCL,EAAAA,EAAAA,GAAkB,CAAEI,MAAO,GAAIC,KAAAA,IAc5C,CAiCUqE,CAAarE,EAEjB,KAEFK,EAAAA,EAAAA,KAACiH,EAAY,MAGnB,C","sources":["webpack://gr03-yourpet-frontend/./src/modules/Notices/NoticesSearch/NoticesSearch.module.css?a893","modules/Notices/NoticesSearch/NoticesSearch.jsx","icons/PlusIcon.jsx","webpack://gr03-yourpet-frontend/./src/modules/Notices/NoticesCategoriesNav/NoticesCategoriesNav.module.css?448c","modules/Notices/NoticesCategoriesNav/NoticesCategoriesNav.jsx","shared/components/Pagination/PaginationNotices.jsx","webpack://gr03-yourpet-frontend/./src/pages/NoticesPage/NoticesPage.module.css?b3b0","webpack://gr03-yourpet-frontend/./src/shared/components/ScrollButton/ScrollButton.module.css?a74b","shared/components/ScrollButton/ScrollButton.jsx","pages/NoticesPage/NoticesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"placeholder\":\"NoticesSearch_placeholder__JQyDU\",\"inputContainer\":\"NoticesSearch_inputContainer__fGNRa\",\"title\":\"NoticesSearch_title__VtZvE\",\"myСomponent\":\"NoticesSearch_myСomponent__SkQxb\",\"dark\":\"NoticesSearch_dark__s4wZf\"};","import React, { useState, useCallback } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { InputAdornment, IconButton, Input } from \"@mui/material\";\r\nimport { Search, Clear } from \"@mui/icons-material\";\r\nimport {\r\n  fetchAllFavoriteNotices,\r\n  fetchNoticesByCategory,\r\n  fetchNoticesByOwn,\r\n} from \"../../../redux/notices/notices-operations\";\r\nimport { selectCategory } from \"../../../redux/notices/notices-selectors\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport css from \"../NoticesSearch/NoticesSearch.module.css\";\r\nimport { toastInfo } from \"../../../shared/toastify/toastify\";\r\n\r\nconst NoticesSearch = () => {\r\n  const dispatch = useDispatch();\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const location = useLocation();\r\n  const categoryIsLoginUser = location.pathname.split(\"/\")[2];\r\n  const category = useSelector(selectCategory);\r\n\r\n  const handleClear = () => {\r\n    setKeyword(\"\");\r\n    try {\r\n      if (categoryIsLoginUser === \"own\") {\r\n        dispatch(fetchNoticesByOwn({ query: \"\", page: 1 }));\r\n      } else if (categoryIsLoginUser === \"favorite\") {\r\n        dispatch(fetchAllFavoriteNotices({ query: \"\", page: 1 }));\r\n      } else if (category) {\r\n        dispatch(\r\n          fetchNoticesByCategory({\r\n            categoryName: category,\r\n            query: \"\",\r\n            page: 1,\r\n          })\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleKeywordChange = (e) => {\r\n    const query = e.target.value;\r\n    setKeyword(query);\r\n    if (query === \"\") {\r\n      try {\r\n        if (categoryIsLoginUser === \"own\") {\r\n          dispatch(fetchNoticesByOwn({ query: \"\", page: 1 }));\r\n        } else if (categoryIsLoginUser === \"favorite\") {\r\n          dispatch(fetchAllFavoriteNotices({ query: \"\", page: 1 }));\r\n        } else if (category) {\r\n          dispatch(\r\n            fetchNoticesByCategory({\r\n              categoryName: category,\r\n              query: \"\",\r\n              page: 1,\r\n            })\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      const trimmedKeyword = keyword.trim();\r\n\r\n      if (trimmedKeyword === \"\") {\r\n        toastInfo(\"Please enter something\");\r\n        return;\r\n      }\r\n      try {\r\n        if (categoryIsLoginUser === \"own\") {\r\n          dispatch(fetchNoticesByOwn(trimmedKeyword, 1));\r\n        } else if (categoryIsLoginUser === \"favorite\") {\r\n          dispatch(fetchAllFavoriteNotices(trimmedKeyword, 1));\r\n        } else if (category) {\r\n          dispatch(\r\n            fetchNoticesByCategory({\r\n              categoryName: category,\r\n              query: trimmedKeyword,\r\n              page: 1,\r\n            })\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    [category, categoryIsLoginUser, dispatch, keyword]\r\n  );\r\n\r\n  return (\r\n    <div className={css.myСomponent}>\r\n      <div className={css.inputContainer}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Input\r\n            value={keyword}\r\n            onChange={handleKeywordChange}\r\n            placeholder=\"Search\"\r\n            disableUnderline\r\n            style={{\r\n              borderRadius: \"20px\",\r\n              backgroundColor: \"#FFFFFF\",\r\n              background: \"transparent\",\r\n              border: \"1px solid #aeadad\",\r\n              padding: \"0px 14px 0px 20px\",\r\n              height: \"43px\",\r\n              boxShadow: \"3px 8px 14px rgba(136, 198, 253, 0.19)\",\r\n            }}\r\n            inputProps={{\r\n              className: css.placeholder,\r\n            }}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton type=\"submit\" style={{ color: \"#54ADFF\" }}>\r\n                  <Search />\r\n                </IconButton>\r\n                {keyword && (\r\n                  <IconButton\r\n                    onClick={handleClear}\r\n                    style={{ color: \"#FFC107\" }}\r\n                  >\r\n                    <Clear />\r\n                  </IconButton>\r\n                )}\r\n              </InputAdornment>\r\n            }\r\n            fullWidth\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(NoticesSearch);\r\n","import * as React from 'react';\r\n\r\nfunction PlusIcon(props) {\r\n  return (\r\n    <svg\r\n      width={20}\r\n      height={20}\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M12 20v-8m0 0V4m0 8h8m-8 0H4\"\r\n        stroke={props.color}\r\n        strokeWidth={1.5}\r\n          />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default PlusIcon;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"navList\":\"NoticesCategoriesNav_navList__hPQ7j\",\"navLink\":\"NoticesCategoriesNav_navLink__Lkg61\",\"active\":\"NoticesCategoriesNav_active__VTj6S\",\"wrapper\":\"NoticesCategoriesNav_wrapper__jvbjc\",\"btnContainer\":\"NoticesCategoriesNav_btnContainer__jeh+p\",\"btn\":\"NoticesCategoriesNav_btn__p73+D\",\"pulse-animation\":\"NoticesCategoriesNav_pulse-animation__0BqdT\",\"iconBtn\":\"NoticesCategoriesNav_iconBtn__KEKPi\",\"myСomponent\":\"NoticesCategoriesNav_myСomponent__Ygbdf\",\"dark\":\"NoticesCategoriesNav_dark__Cccfk\"};","import React from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectIsLoggedIn } from \"../../../redux/auth/auth-selectors\";\r\nimport * as toasty from \"../../../shared/toastify/toastify\";\r\nimport PlusIcon from \"../../../icons/PlusIcon\";\r\n\r\nimport css from \"./NoticesCategoriesNav.module.css\";\r\n\r\nconst link = [\r\n  { to: \"sell\", text: \"sell\" },\r\n  { to: \"lost-found\", text: \"lost/found\" },\r\n  { to: \"for-free\", text: \"in good hands\" },\r\n];\r\n\r\nconst getClassNameLink = ({ isActive }) => {\r\n  const className = isActive ? `${css.navLink} ${css.active}` : css.navLink;\r\n  return className;\r\n};\r\n\r\nconst NoticesCategoriesNav = ({ onOwnClick, onFavoriteClick }) => {\r\n  const navigate = useNavigate();\r\n  const isLoggedIn = useSelector(selectIsLoggedIn);\r\n\r\n  const handleClick = () => {\r\n    if (!isLoggedIn) {\r\n      toasty.toastInfo(\"You must be logged in\");\r\n      return;\r\n    } else {\r\n      navigate(\"/add-pet\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={css.myСomponent}>\r\n      <div className={css.wrapper}>\r\n        <ul className={css.navList}>\r\n          {link.map((element) => (\r\n            <li key={element.to}>\r\n              <NavLink to={element.to} className={getClassNameLink}>\r\n                {element.text}\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n          {isLoggedIn && (\r\n            <>\r\n              <li key=\"own\">\r\n                <NavLink\r\n                  to=\"own\"\r\n                  className={getClassNameLink}\r\n                  onClick={() => {\r\n                    onOwnClick();\r\n                  }}\r\n                >\r\n                  my ads\r\n                </NavLink>\r\n              </li>\r\n              <li key=\"favorite\">\r\n                <NavLink\r\n                  to=\"favorite\"\r\n                  className={getClassNameLink}\r\n                  onClick={() => {\r\n                    onFavoriteClick();\r\n                  }}\r\n                >\r\n                  favorite ads\r\n                </NavLink>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n        <div className={css.btnContainer}>\r\n          {/* <Filter /> */}\r\n          <button className={css.btn} onClick={handleClick}>\r\n            Add Pet <PlusIcon color=\"#FEF9F9\" className={css.iconBtn} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticesCategoriesNav;\r\n","import React from \"react\";\r\n\r\nimport { Stack, Pagination, PaginationItem } from \"@mui/material\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\n\r\nconst PaginationNotices = ({\r\n  totalPages,\r\n  currentCategory,\r\n  ownCurrentPage,\r\n  favoriteCurrentPage,\r\n  onPageChange,\r\n  currentPage,\r\n}) => {\r\n  const currentPageInit =\r\n    currentCategory === \"own\"\r\n      ? ownCurrentPage\r\n      : currentCategory === \"favorite\"\r\n      ? favoriteCurrentPage\r\n      : currentPage;\r\n\r\n  const handlePageChange = (event, page) => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    onPageChange(page);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={2}>\r\n      {totalPages > 1 && (\r\n        <Pagination\r\n          count={totalPages}\r\n          page={currentPageInit}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          onChange={handlePageChange}\r\n          sx={{\r\n            marginX: \"auto\",\r\n            marginBottom: \"20px\",\r\n            boxShadow: \"3px 8px 14px rgba(136, 198, 253, 0.19)\",\r\n            borderRadius: \"45px\",\r\n            padding: \"8px 12px\",\r\n            background: \"#FEF9F9\",\r\n          }}\r\n          renderItem={(item) => (\r\n            <PaginationItem\r\n              sx={{\r\n                \"&.Mui-selected\": {\r\n                  background: \"#54ADFF\",\r\n                  color: \"#FEF9F9\",\r\n                  border: \"none\",\r\n                },\r\n                background: \"#FEF9F9\",\r\n                color: \"#CCE4FB\",\r\n                borderColor: \"#CCE4FB\",\r\n              }}\r\n              icon={\r\n                item.type === \"previous\" ? (\r\n                  <ArrowBackIcon />\r\n                ) : (\r\n                  <ArrowForwardIcon />\r\n                )\r\n              }\r\n              component=\"button\"\r\n              onClick={(e) => handlePageChange(e, item.page)}\r\n              selected={item.page === currentPage}\r\n              {...item}\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default PaginationNotices;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"NoticesPage_title__jnzPd\",\"myСomponent\":\"NoticesPage_myСomponent__UW4PX\",\"dark\":\"NoticesPage_dark__LqrOp\"};","// extracted by mini-css-extract-plugin\nexport default {\"scrollButton\":\"ScrollButton_scrollButton__y90yu\"};","import React, { useState, useEffect } from 'react';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\n\r\nimport css from './ScrollButton.module.css';\r\n\r\nconst ScrollButton = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const scrolled = window.pageYOffset;\r\n      if (scrolled > 300) {\r\n        setIsVisible(true);\r\n      } else {\r\n        setIsVisible(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isVisible && (\r\n        <div className={css.scrollButton} onClick={scrollToTop}>\r\n          <KeyboardArrowUpIcon fontSize='large' />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScrollButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Outlet, useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  fetchNoticesByCategory,\r\n  fetchNoticesByOwn,\r\n  fetchAllFavoriteNotices,\r\n} from \"../../redux/notices/notices-operations\";\r\n\r\nimport {\r\n  getAllNotices,\r\n  selectNoticesTotalPages,\r\n  selectNoticesPage,\r\n} from \"../../redux/notices/notices-selectors\";\r\nimport NoticesSearch from \"../../modules/Notices/NoticesSearch/NoticesSearch\";\r\nimport NoticesCategoriesNav from \"../../modules/Notices/NoticesCategoriesNav/NoticesCategoriesNav\";\r\nimport PaginationNotices from \"../../shared/components/Pagination/PaginationNotices\";\r\n\r\nimport css from \"../NoticesPage/NoticesPage.module.css\";\r\nimport ScrollButton from \"../../shared/components/ScrollButton/ScrollButton\";\r\n\r\nconst NoticesPage = () => {\r\n  const dispatch = useDispatch();\r\n  const notices = useSelector(getAllNotices);\r\n\r\n  const [ownCurrentPage, setOwnCurrentPage] = useState(1);\r\n  const [favoriteCurrentPage, setFavoriteCurrentPage] = useState(1);\r\n  const totalPages = useSelector(selectNoticesTotalPages);\r\n  const currentPage = useSelector(selectNoticesPage);\r\n  const location = useLocation();\r\n  const currentCategory = location.pathname.split(\"/\")[2];\r\n\r\n  useEffect(() => {\r\n    if (currentCategory === \"sell\") {\r\n      dispatch(\r\n        fetchNoticesByCategory({\r\n          categoryName: \"sell\",\r\n          query: \"\",\r\n          page: 1,\r\n        })\r\n      );\r\n      return;\r\n    }\r\n    if (currentCategory === \"for-free\") {\r\n      dispatch(\r\n        fetchNoticesByCategory({\r\n          categoryName: \"for-free\",\r\n          query: \"\",\r\n          page: 1,\r\n        })\r\n      );\r\n      return;\r\n    }\r\n    if (currentCategory === \"lost-found\") {\r\n      dispatch(\r\n        fetchNoticesByCategory({\r\n          categoryName: \"lost-found\",\r\n          query: \"\",\r\n          page: 1,\r\n        })\r\n      );\r\n      return;\r\n    }\r\n    if (currentCategory === \"own\") {\r\n      dispatch(fetchNoticesByOwn({ query: \"\", page: ownCurrentPage }));\r\n      return;\r\n    }\r\n    if (currentCategory === \"favorite\") {\r\n      dispatch(\r\n        fetchAllFavoriteNotices({ query: \"\", page: favoriteCurrentPage })\r\n      );\r\n      return;\r\n    }\r\n  }, [currentCategory, dispatch, ownCurrentPage, favoriteCurrentPage]);\r\n\r\n  const handleOwnClick = () => {\r\n    dispatch(fetchNoticesByOwn({ query: \"\", page: ownCurrentPage }));\r\n  };\r\n\r\n  const handleFavoriteClick = () => {\r\n    dispatch(fetchAllFavoriteNotices({ query: \"\", page: favoriteCurrentPage }));\r\n  };\r\n\r\n  const onPageChange = (page) => {\r\n    if (currentCategory === \"own\") {\r\n      dispatch(fetchNoticesByOwn({ query: \"\", page }));\r\n      return;\r\n    } else if (currentCategory === \"favorite\") {\r\n      dispatch(fetchAllFavoriteNotices({ query: \"\", page }));\r\n      return;\r\n    } else {\r\n      dispatch(\r\n        fetchNoticesByCategory({\r\n          categoryName: currentCategory,\r\n          query: \"\",\r\n          page,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleOwnPageChange = (page) => {\r\n    setOwnCurrentPage(page);\r\n    dispatch(fetchNoticesByOwn({ query: \"\", page }));\r\n  };\r\n\r\n  const handleFavoritePageChange = (page) => {\r\n    setFavoriteCurrentPage(page);\r\n    dispatch(fetchAllFavoriteNotices({ query: \"\", page }));\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className={css.title}>Find your favorite pet</h2>\r\n      <NoticesSearch />\r\n      <NoticesCategoriesNav\r\n        onOwnClick={handleOwnClick}\r\n        onFavoriteClick={handleFavoriteClick}\r\n      />\r\n\r\n      {notices && <Outlet />}\r\n      <PaginationNotices\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        currentCategory={currentCategory}\r\n        ownCurrentPage={ownCurrentPage}\r\n        favoriteCurrentPage={favoriteCurrentPage}\r\n        onPageChange={(page) => {\r\n          if (currentCategory === \"own\") {\r\n            handleOwnPageChange(page);\r\n          } else if (currentCategory === \"favorite\") {\r\n            handleFavoritePageChange(page);\r\n          } else {\r\n            onPageChange(page);\r\n          }\r\n        }}\r\n      />\r\n      <ScrollButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticesPage;\r\n"],"names":["NoticesSearch","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","keyword","setKeyword","categoryIsLoginUser","useLocation","pathname","split","category","useSelector","selectCategory","handleSubmit","useCallback","e","preventDefault","trimmedKeyword","trim","fetchNoticesByOwn","fetchAllFavoriteNotices","fetchNoticesByCategory","categoryName","query","page","error","console","log","toastInfo","_jsx","className","css","children","onSubmit","Input","value","onChange","target","placeholder","disableUnderline","style","borderRadius","backgroundColor","background","border","padding","height","boxShadow","inputProps","endAdornment","_jsxs","InputAdornment","position","IconButton","type","color","Search","onClick","Clear","fullWidth","React","props","_objectSpread","width","fill","xmlns","d","stroke","strokeWidth","link","to","text","getClassNameLink","_ref","isActive","concat","_ref2","onOwnClick","onFavoriteClick","navigate","useNavigate","isLoggedIn","selectIsLoggedIn","map","element","NavLink","_Fragment","toasty","PlusIcon","totalPages","currentCategory","ownCurrentPage","favoriteCurrentPage","onPageChange","currentPage","currentPageInit","handlePageChange","event","window","scrollTo","top","behavior","Stack","spacing","Pagination","count","variant","sx","marginX","marginBottom","renderItem","item","PaginationItem","borderColor","icon","ArrowBackIcon","ArrowForwardIcon","component","selected","isVisible","setIsVisible","useEffect","handleScroll","scrolled","pageYOffset","addEventListener","removeEventListener","KeyboardArrowUpIcon","fontSize","notices","getAllNotices","setOwnCurrentPage","_useState3","_useState4","setFavoriteCurrentPage","selectNoticesTotalPages","selectNoticesPage","NoticesCategoriesNav","Outlet","PaginationNotices","handleOwnPageChange","handleFavoritePageChange","ScrollButton"],"sourceRoot":""}
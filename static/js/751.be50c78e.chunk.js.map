{"version":3,"file":"static/js/751.be50c78e.chunk.js","mappings":"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","sources":["webpack://gr03-yourpet-frontend/./src/modules/LoginForm/LoginForm.module.css?2400","modules/LoginForm/LoginForm.jsx","webpack://gr03-yourpet-frontend/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx","shared/helpers/schemas.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__xH6B4\",\"title\":\"LoginForm_title__9IAwS\",\"questionText\":\"LoginForm_questionText__VWiQl\",\"registerLink\":\"LoginForm_registerLink__IsJ-u\",\"buttonContainer\":\"LoginForm_buttonContainer__veyP5\",\"button\":\"LoginForm_button__pMzia\"};","import { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { TextField, IconButton, Box } from \"@mui/material\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { blue } from \"@mui/material/colors\";\r\nimport { loginSchema } from \"../../shared/helpers/schemas\";\r\n\r\nimport {\r\n  selectIsLoading,\r\n  selectIsLoggedIn,\r\n} from \"../../redux/auth/auth-selectors\";\r\nimport { login } from \"../../redux/auth/auth-operations\";\r\nimport Loader from \"../../shared/components/Loader/Loader\";\r\nimport css from \"./LoginForm.module.css\";\r\n\r\nconst data = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst LoginForm = () => {\r\n  const navigate = useNavigate();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n   const dispatch = useDispatch();\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    const data = {\r\n      email: values.email,\r\n      password: values.password,\r\n    };\r\n    await dispatch(login(data));\r\n    navigate(\"/user\");\r\n  };\r\n\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const isLoggedIn = useSelector(selectIsLoggedIn);\r\n  return (\r\n    <>\r\n      {isLoading && <Loader />}\r\n      {isLoading && isLoggedIn && <Loader />}\r\n      <div className={css.myÐ¡omponent}>\r\n        <Formik\r\n          initialValues={data}\r\n          onSubmit={handleFormSubmit}\r\n          validationSchema={loginSchema}\r\n        >\r\n          {({ values, errors, touched, handleSubmit, handleChange }) => (\r\n            <Form className={css.form} onSubmit={handleSubmit}>\r\n              <h2 className={css.title}>{\"Login\"}</h2>\r\n              <Box\r\n                sx={{\r\n                  marginBottom: \"10px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"flex-end\",\r\n                }}\r\n              >\r\n                <TextField\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  label=\"Email\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  sx={{\r\n                    \".MuiInputBase-root.MuiOutlinedInput-root\": {\r\n                      borderRadius: \"40px\",\r\n                    },\r\n                    \"& .MuiInputLabel-root.Mui-focused\": {\r\n                      color: \"#54ADFF\",\r\n                    },\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": {\r\n                        borderRadius: 40,\r\n                        border: \"1px solid #54ADFF\",\r\n                      },\r\n                      \"&:hover fieldset\": {\r\n                        borderColor: \"#54ADFF\",\r\n                      },\r\n                      \"&.Mui-focused fieldset\": {\r\n                        borderColor: \"#54ADFF\",\r\n                        borderWidth: \"2px\",\r\n                      },\r\n                    },\r\n                  }}\r\n                  onChange={handleChange}\r\n                  value={values.email}\r\n                  error={touched.email && Boolean(errors.email)}\r\n                  helperText={touched.email && errors.email}\r\n                />\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  marginBottom: \"10px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"flex-end\",\r\n                }}\r\n              >\r\n                <TextField\r\n                  name=\"password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  label=\"Password\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  sx={{\r\n                    \".MuiInputBase-root.MuiOutlinedInput-root\": {\r\n                      borderRadius: \"40px\",\r\n                    },\r\n                    \"& .MuiInputLabel-root.Mui-focused\": {\r\n                      color: \"#54ADFF\",\r\n                    },\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": {\r\n                        borderRadius: 40,\r\n                        border: \"1px solid #54ADFF\",\r\n                      },\r\n                      \"&:hover fieldset\": {\r\n                        borderColor: \"#54ADFF\",\r\n                      },\r\n                      \"&.Mui-focused fieldset\": {\r\n                        borderColor: \"#54ADFF\",\r\n                        borderWidth: \"2px\",\r\n                      },\r\n                    },\r\n                  }}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        edge=\"end\"\r\n                        size=\"small\"\r\n                      >\r\n                        {showPassword ? (\r\n                          <Visibility\r\n                            style={{\r\n                              color: blue[300],\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          <VisibilityOff\r\n                            style={{\r\n                              color: blue[300],\r\n                            }}\r\n                          />\r\n                        )}\r\n                        {}\r\n                      </IconButton>\r\n                    ),\r\n                  }}\r\n                  onChange={handleChange}\r\n                  value={values.password}\r\n                  error={touched.password && Boolean(errors.password)}\r\n                  helperText={touched.password && errors.password}\r\n                />\r\n              </Box>\r\n              <div className={css.buttonContainer}>\r\n                <button type=\"submit\" className={css.button}>\r\n                  {\"Login\"}\r\n                </button>\r\n              </div>\r\n              <p className={css.questionText}>\r\n                {\"Don't have an account?\"}{\" \"}\r\n                <Link to=\"/register\" className={css.registerLink}>\r\n                  {\"Register\"}\r\n                </Link>\r\n              </p>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionMain\":\"LoginPage_sectionMain__U3Mut\"};","import LoginForm from \"../../modules/LoginForm/LoginForm\";\r\nimport css from \"./LoginPage.module.css\";\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <div className={css.myÐ¡omponent}>\r\n      <section className={css.sectionMain}>\r\n        <div className=\"container\">\r\n          <LoginForm />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import * as yup from \"yup\";\r\n\r\nexport const loginSchema = yup.object({\r\n  email: yup.string().email(\"Invalid email\").required(\"Enter a valid Email\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(6, \"Password must be at least 6 characters\")\r\n    .max(16, \"Password must be at most 16 characters\")\r\n    .matches(\r\n      /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([0-9a-zA-Z]{6,})*$/,\r\n      \"Password must contain at least one uppercase letter, one lowercase letter, and one digit\"\r\n    ),\r\n});\r\n\r\nexport const registerSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required(\"Name is required\")\r\n    .matches(/^[a-zA-Z\\s]*$/),\r\n  email: yup\r\n    .string()\r\n    .email(\"Invalid email\")\r\n    .required(\"Email is required\")\r\n    .matches(\r\n      /^(?=.{10,63}$)(([0-9A-Za-z]{1}[-0-9A-z.]{1,}[0-9A-Za-z]{1})@([-A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$/,\r\n      \"Invalid email\"\r\n    ),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(6, \"Password must be at least 6 characters\")\r\n    .max(16, \"Password must be at most 16 characters\")\r\n    .matches(\r\n      /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([0-9a-zA-Z]{6,})*$/,\r\n      \"Password must contain at least one uppercase letter, one lowercase letter, and one digit\"\r\n    ),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Confirm password is required\")\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n"],"names":["data","email","password","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","handleClickShowPassword","show","dispatch","useDispatch","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","login","stop","_x","apply","arguments","isLoading","useSelector","selectIsLoading","isLoggedIn","selectIsLoggedIn","_jsxs","_Fragment","children","_jsx","Loader","className","css","myÐ¡omponent","Formik","initialValues","onSubmit","validationSchema","loginSchema","_ref2","errors","touched","handleSubmit","handleChange","Form","form","title","Box","sx","marginBottom","display","alignItems","TextField","name","type","label","size","fullWidth","borderRadius","color","border","borderColor","borderWidth","onChange","value","error","Boolean","helperText","InputProps","endAdornment","IconButton","onClick","edge","Visibility","style","blue","VisibilityOff","buttonContainer","button","questionText","Link","to","registerLink","sectionMain","LoginForm","yup","required","min","max","matches","registerSchema","shape","confirmPassword","oneOf"],"sourceRoot":""}
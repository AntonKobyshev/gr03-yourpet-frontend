{"version":3,"file":"static/js/86.706085ad.chunk.js","mappings":"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","sources":["webpack://gr03-yourpet-frontend/./src/modules/RegisterForm/registerForm.module.css?7830","modules/RegisterForm/RegisterForm.jsx","webpack://gr03-yourpet-frontend/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.jsx","shared/helpers/schemas.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"registerForm_form__1uR7D\",\"title\":\"registerForm_title__FgSca\",\"questionText\":\"registerForm_questionText__Dtpc1\",\"loginLink\":\"registerForm_loginLink__gl7cA\",\"buttonContainer\":\"registerForm_buttonContainer__j3gbt\",\"button\":\"registerForm_button__LfUIX\"};","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { TextField, IconButton, Box } from \"@mui/material\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { blue } from \"@mui/material/colors\";\r\nimport { selectIsLoading } from '../../redux/auth/auth-selectors';\r\nimport { register } from \"../../redux/auth/auth-operations\";\r\nimport Loader from '../../shared/components/Loader/Loader';\r\nimport { registerSchema } from \"../../shared/helpers/schemas\";\r\nimport css from \"./registerForm.module.css\";\r\n\r\nconst data = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\n\r\nconst RegisterForm = () => {\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n  const handleClickShowConfirmPassword = () =>\r\n    setShowConfirmPassword((show) => !show);\r\n\r\n  const dispatch = useDispatch();\r\n  const handleFormSubmit = async (values) => {\r\n    const data = {\r\n      name: values.name,\r\n      email: values.email,\r\n      password: values.password,\r\n    };\r\n    await dispatch(register(data));\r\n    navigate(\"/user\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loader />}\r\n       <div className={css.myÐ¡omponent}>\r\n        <Formik\r\n          initialValues={data}\r\n          onSubmit={handleFormSubmit}\r\n          validationSchema={registerSchema}\r\n        >\r\n          {({ values, errors, touched, handleSubmit, handleChange }) => (\r\n            <Form className={css.form} onSubmit={handleSubmit}>\r\n              <h2 className={css.title}>{\"Registration\"}</h2>\r\n              <Box\r\n                sx={{\r\n                  marginBottom: \"10px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"flex-end\",\r\n                }}\r\n              >\r\n                <TextField\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  label=\"Name\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  sx={{\r\n                    \".MuiInputBase-root.MuiOutlinedInput-root\": {\r\n                      borderRadius: \"40px\",\r\n                    },\r\n\r\n                    \"& .MuiInputLabel-root.Mui-focused\": {\r\n                      color: \"#54ADFF\",\r\n                    },\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": {\r\n                        borderRadius: 40,\r\n                        border: `1px solid #54ADFF`,\r\n                      },\r\n                      \"&:hover fieldset\": {\r\n                        borderColor: \"#54ADFF\",\r\n                      },\r\n                      \"&.Mui-focused fieldset\": {\r\n                        borderColor: \"#54ADFF\",\r\n                        borderWidth: \"2px\",\r\n                      },\r\n                    },\r\n                  }}\r\n                  onChange={handleChange}\r\n                  value={values.name}\r\n                  error={touched.name && Boolean(errors.name)}\r\n                  helperText={touched.name && errors.name}\r\n                />\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  marginBottom: \"10px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"flex-end\",\r\n                }}\r\n              >\r\n                <TextField\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  label=\"Email\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  sx={{\r\n                    \".MuiInputBase-root.MuiOutlinedInput-root\": {\r\n                      borderRadius: \"40px\",\r\n                    },\r\n                    \"& .MuiInputLabel-root.Mui-focused\": {\r\n                      color: \"#54ADFF\",\r\n                    },\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": {\r\n                        borderRadius: 40,\r\n                        border: \"1px solid #54ADFF\",\r\n                      },\r\n                      \"&:hover fieldset\": {\r\n                        borderColor: \"#54ADFF\",\r\n                      },\r\n                      \"&.Mui-focused fieldset\": {\r\n                        borderColor: \"#54ADFF\",\r\n                        borderWidth: \"2px\",\r\n                      },\r\n                    },\r\n                  }}\r\n                  onChange={handleChange}\r\n                  value={values.email}\r\n                  error={touched.email && Boolean(errors.email)}\r\n                  helperText={touched.email && errors.email}\r\n                />\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  marginBottom: \"10px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"flex-end\",\r\n                }}\r\n              >\r\n                <TextField\r\n                  name=\"password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  label=\"Password\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  sx={{\r\n                    \".MuiInputBase-root.MuiOutlinedInput-root\": {\r\n                      borderRadius: \"40px\",\r\n                    },\r\n                    \"& .MuiInputLabel-root.Mui-focused\": {\r\n                      color: \"#54ADFF\",\r\n                    },\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": {\r\n                        borderRadius: 40,\r\n                        border: \"1px solid #54ADFF\",\r\n                      },\r\n\r\n                      \"&:hover fieldset\": {\r\n                        borderColor: \"#54ADFF\",\r\n                      },\r\n                      \"&.Mui-focused fieldset\": {\r\n                        borderColor: \"#54ADFF\",\r\n                        borderWidth: \"2px\",\r\n                      },\r\n                    },\r\n                  }}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        edge=\"end\"\r\n                        size=\"small\"\r\n                      >\r\n                        {showPassword ? (\r\n                          <Visibility\r\n                            style={{\r\n                              color: blue[300],\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          <VisibilityOff\r\n                            style={{\r\n                              color: blue[300],\r\n                            }}\r\n                          />\r\n                        )}\r\n                        {}\r\n                      </IconButton>\r\n                    ),\r\n                  }}\r\n                  onChange={handleChange}\r\n                  value={values.password}\r\n                  error={touched.password && Boolean(errors.password)}\r\n                  helperText={touched.password && errors.password}\r\n                />\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  marginBottom: \"10px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"flex-end\",\r\n                }}\r\n              >\r\n                <TextField\r\n                  name=\"confirmPassword\"\r\n                  type={showConfirmPassword ? \"text\" : \"password\"}\r\n                  label=\"Confirm password\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  sx={{\r\n                    \"& .MuiInputLabel-root.Mui-focused\": {\r\n                      color: \"#54ADFF\",\r\n                    },\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": {\r\n                        borderRadius: 40,\r\n                        border: \"1px solid #54ADFF\",\r\n                      },\r\n                      \"&:hover fieldset\": {\r\n                        borderColor: \"#54ADFF\",\r\n                      },\r\n                      \"&.Mui-focused fieldset\": {\r\n                        borderColor: \"#54ADFF\",\r\n                        borderWidth: \"2px\",\r\n                      },\r\n                    },\r\n                  }}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowConfirmPassword}\r\n                        edge=\"end\"\r\n                        size=\"small\"\r\n                      >\r\n                        {showConfirmPassword ? (\r\n                          <Visibility\r\n                            style={{\r\n                              color: blue[300],\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          <VisibilityOff\r\n                            style={{\r\n                              color: blue[300],\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </IconButton>\r\n                    ),\r\n                  }}\r\n                  onChange={handleChange}\r\n                  value={values.confirmPassword}\r\n                  error={\r\n                    touched.confirmPassword && Boolean(errors.confirmPassword)\r\n                  }\r\n                  helperText={touched.confirmPassword && errors.confirmPassword}\r\n                />\r\n              </Box>\r\n              <div className={css.buttonContainer}>\r\n                <button type=\"submit\" className={css.button}>\r\n                  {\"Registration\"}\r\n                </button>\r\n              </div>\r\n              <p className={css.questionText}>\r\n                {\"Already have an account?\"}{\" \"}\r\n                <Link to=\"/login\" className={css.loginLink}>\r\n                  {\"Login\"}\r\n                </Link>\r\n              </p>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionMain\":\"RegisterPage_sectionMain__7y2j8\"};","import RegisterForm from \"../../modules/RegisterForm/RegisterForm\";\r\nimport css from \"./RegisterPage.module.css\";\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <div className={css.myÐ¡omponent}>\r\n      <section className={css.sectionMain}>\r\n        <div className=\"container\">\r\n          <RegisterForm />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import * as yup from \"yup\";\r\n\r\nexport const loginSchema = yup.object({\r\n  email: yup.string().email(\"Invalid email\").required(\"Enter a valid Email\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(6, \"Password must be at least 6 characters\")\r\n    .max(16, \"Password must be at most 16 characters\")\r\n    .matches(\r\n      /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([0-9a-zA-Z]{6,})*$/,\r\n      \"Password must contain at least one uppercase letter, one lowercase letter, and one digit\"\r\n    ),\r\n});\r\n\r\nexport const registerSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required(\"Name is required\")\r\n    .matches(/^[a-zA-Z\\s]*$/),\r\n  email: yup\r\n    .string()\r\n    .email(\"Invalid email\")\r\n    .required(\"Email is required\")\r\n    .matches(\r\n      /^(?=.{10,63}$)(([0-9A-Za-z]{1}[-0-9A-z.]{1,}[0-9A-Za-z]{1})@([-A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$/,\r\n      \"Invalid email\"\r\n    ),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(6, \"Password must be at least 6 characters\")\r\n    .max(16, \"Password must be at most 16 characters\")\r\n    .matches(\r\n      /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([0-9a-zA-Z]{6,})*$/,\r\n      \"Password must contain at least one uppercase letter, one lowercase letter, and one digit\"\r\n    ),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Confirm password is required\")\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n"],"names":["data","name","email","password","confirmPassword","isLoading","useSelector","selectIsLoading","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","showConfirmPassword","setShowConfirmPassword","navigate","useNavigate","handleClickShowPassword","show","handleClickShowConfirmPassword","dispatch","useDispatch","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","register","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","className","css","myÐ¡omponent","Formik","initialValues","onSubmit","validationSchema","registerSchema","_ref2","errors","touched","handleSubmit","handleChange","Form","form","title","Box","sx","marginBottom","display","alignItems","TextField","type","label","size","fullWidth","borderRadius","color","border","borderColor","borderWidth","onChange","value","error","Boolean","helperText","InputProps","endAdornment","IconButton","onClick","edge","Visibility","style","blue","VisibilityOff","buttonContainer","button","questionText","Link","to","loginLink","sectionMain","RegisterForm","loginSchema","yup","required","min","max","matches","shape","oneOf"],"sourceRoot":""}